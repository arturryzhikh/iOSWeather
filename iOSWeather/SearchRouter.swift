//
//  SearchRouter.swift
//  iOSWeather
//
//  Created by Artur Ryzhikh on 17.01.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol SearchRoutingLogic {
    func showAlert(message: String)
    func routeToHome(with coordinates: Coordinates)
    func navigateToParent(source: SearchViewController, destination: HomeViewController)
   
}

protocol SearchDataPassing {
    var dataStore: SearchDataStore? { get set }
    func passCoordinatesToHome(source: SearchDataStore , destination: inout HomeDataStore)
}

class SearchRouter: NSObject, SearchRoutingLogic, SearchDataPassing {
    
    func routeToHome(with coordinates: Coordinates) {
        self.dataStore?.coordinates = coordinates
        let destinationVC = HomeViewController()
        let destionationDS = destinationVC.router?.dataStore
        guard let ds = self.dataStore, var dDs = destionationDS else {
            return
        }
        passCoordinatesToHome(source: ds , destination: &dDs)
    }
    
    
    weak var viewController: SearchViewController?
    
    var dataStore: SearchDataStore?
    //MARK: Alert
    func showAlert(message: String) {
        let alert = UIAlertController(
            title: "Oops! Something went wrong.",
            message: message,
            preferredStyle: .actionSheet)
        alert.addAction(.init(title: "ok", style: .default))
        DispatchQueue.main.async { [weak self] in
            guard let self = self else {
                return
            }
            self.viewController?.present(alert, animated: true)
        }
    }
    
    //MARK: Navigation
    //    func routeToParent(segue: UIStoryboardSegue?)
    //      {
    //        // Get the destination view controller and data store
    //        let destinationVC = viewController?.presentingViewController as! ParentViewController
    //        var destinationDS = destinationVC.router!.dataStore!
    //
    //        // Pass data to the destination data store
    //        passDataToParent(source: dataStore!, destination: &destinationDS)
    //
    //        // Navigate to the destination view controller
    //        navigateToParent(source: viewController!, destination: destinationVC)
    //      }
    //
    //      func passDataToParent(source: ChildDataStore, destination: inout ParentDataStore)
    //      {
    //        // Pass data backward
    //        destination.name = source.name
    //      }
    //
    
    //
    //    func navigateToSomewhere(source: SearchViewController, destination: SomewhereViewController) {
    //        source.show(destination, sender: nil)
    //    }
    
    //MARK: Passing data
    func navigateToParent(source: SearchViewController, destination: HomeViewController) {
        if let navigation = source.navigationController {
            navigation.dismiss(animated: true, completion: nil)
        } else {
            source.dismiss(animated: true, completion: nil)
        }
        
        
    }
    func passCoordinatesToHome(source: SearchDataStore , destination: inout HomeDataStore) {
        destination.coordinates = source.coordinates
    }
}
