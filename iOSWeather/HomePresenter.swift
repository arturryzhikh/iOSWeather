//
//  HomePresenter.swift
//  iOSWeather
//
//  Created by Artur Ryzhikh on 14.01.2022.
//  Copyright (c) 2022 Artur Ryzhikh. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomePresentationLogic {
    func presentWeather(response: Home.Responses.Response)
    func present(error: Error)
}

class HomePresenter: NSObject, HomePresentationLogic {
    
    var builder: HomeViewModelBuilder?
    weak var viewController: HomeDisplayLogic?
    //MARK: Present
    func presentWeather(response: Home.Responses.Response) {
        DispatchQueue.main.async { [weak self] in
            guard let self = self else {
                return
            }
            self.builder = HomeViewModelBuilder(model: response)
            guard let viewModel = self.builder?.buildViewModel() else {
                let message = "Error constructing View Model from weather data"
                self.viewController?.displayError(message: message)
                return
            }
            self.viewController?.displayWeather(viewModel)
        }
    }
    
    func present(error: Error) {
        DispatchQueue.main.async { [weak self] in
            guard let self = self else {
                return
            }
            let message = "Error occured while fetching weather"
            + error.localizedDescription
            self.viewController?.displayError(message: message)        }
        
    }

}



